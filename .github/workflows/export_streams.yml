name: Export Streams Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *'  # Run at midnight EST (5:00 UTC)

jobs:
  export_streams:
    runs-on: ubuntu-latest
    steps:
    - name: Check out scripts repository
      uses: actions/checkout@v4
      with:
        repository: RamVasuthevan/scripts
        path: scripts
        token: ${{ secrets.PAT_TOKEN }}

    - name: Check out dogsheep-data repository
      uses: actions/checkout@v4
      with:
        repository: RamVasuthevan/dogsheep-data
        path: dogsheep-data
        ref: test-streams-export
        token: ${{ secrets.PAT_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      working-directory: scripts/streams-export
      run: |
        pip install pipenv
        pipenv install

    - name: Delete existing data
      run: |
        rm -rf dogsheep-data/streams/${{ secrets.STREAMS_USERNAME }}

    - name: Run export script
      working-directory: scripts/streams-export
      run: |
        pipenv run python export_streams.py ${{ secrets.STREAMS_USERNAME }} ../../dogsheep-data/streams/${{ secrets.STREAMS_USERNAME }}
      env:
        PYTHONUNBUFFERED: 1

    - name: Commit and push if changed
      working-directory: dogsheep-data
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        
        # Get script name
        script_name="export_streams.py"
        
        # Get repository name
        repository=$(git config --get remote.origin.url | sed 's/.*\/\([^\/]*\/[^\/]*\)\.git/\1/')
        
        # Get commit hash
        commit_hash=$(git rev-parse HEAD)
        
        # Construct commit message
        commit_message="Streams Export
        Script: ${script_name}
        Repository: ${repository}
        Commit hash: ${commit_hash}
        Username: ${{ secrets.STREAMS_USERNAME }}"
        
        # Commit and push if there are changes
        git diff --quiet && git diff --staged --quiet || (git commit -m "$commit_message" && git push origin test-streams-export)